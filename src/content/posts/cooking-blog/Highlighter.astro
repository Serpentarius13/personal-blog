---
interface Props {
  id: string;
  targetId: string;
  activeClassname: string;
  reducedClassname: string;
  timeout?: number;
  children?: any;
}

const { id, targetId, activeClassname, reducedClassname, timeout = 2500 } = Astro.props;
---

<button id={id} class="btn btn-sm inline-block"> <slot /> </button>

<script define:vars={{ id, activeClassname, reducedClassname, targetId, timeout }} is:inline>
  function main() {
    const button = document.querySelector(`#${id}`);

    button?.addEventListener("click", () => {
      const target = document.querySelector(`#${targetId}`);

      const scrollHiddenElements = document.querySelectorAll(".scroll-hidden");
      for (const el of scrollHiddenElements) {
        el.classList.remove("scroll-hidden");
      }

      let classes = window.matchMedia("(prefers-reduced-motion)").matches
        ? reducedClassname.split(" ")
        : activeClassname.split(" ");

      target?.classList.add(...classes);

      setTimeout(() => {
        target?.classList.remove(...classes);
      }, timeout);
    });
  }
  main();
</script>
