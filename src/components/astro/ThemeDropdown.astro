---
import { cn } from "@/lib/cn";
import { THEMES } from "config";

const toTitleCase = (str: string) => {
  return str.slice(0, 1).toUpperCase() + str.slice(1);
};
interface Props {
  children?: any;
  class?: string;
  contentClassname?: string;
}

const { class: className, contentClassname } = Astro.props;
---

<div class={cn("dropdown dropdown-bottom -lg:dropdown-left !h-8 -lg:dropdown-bottom", className)}>
  <div
    tabindex="0"
    role="button"
    class="btn btn-outline btn-primary btn-sm rounded-btn"
    aria-labelledby="theme-switcher-label"
  >
    <slot />
    <span class="sr-only" id="theme-switcher-label">Theme switcher dropdown</span>
  </div>
  <ul
    tabindex="0"
    class={cn(
      `menu dropdown-content bg-base-100 rounded-box z-[1] w-52 p-2 mt-2 ring-2
      ring-primary max-h-[200px] flex-nowrap overflow-auto custom-scrollbar`,
      contentClassname,
    )}
  >
    {
      Object.values(THEMES).map((theme) => {
        return (
          <li data-theme={theme} class="mb-2 rounded-box [&:last-child]:mb-0">
            <div
              role="button"
              tabindex="0"
              id={`theme-switcher-${theme}`}
              class="border-1 btn rounded-btn border-primary bg-base-100 text-base-content hover:bg-primary hover:text-primary-content"
            >
              {toTitleCase(theme)}
            </div>
          </li>
        );
      })
    }
  </ul>
</div>

<script>
  const handleSwitchTheme = (theme: string) => {
    document.documentElement.dataset.theme = theme;
  };

  document.querySelectorAll(`[id^="theme-switcher-"]`).forEach((el) => {
    el.addEventListener("click", (event) => {
      event.preventDefault();
      const theme = (event.target as HTMLElement)?.parentElement?.dataset.theme as string;
      handleSwitchTheme(theme);
    });
  });
</script>
