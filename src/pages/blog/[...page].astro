---
import PostGridCard from "@/components/astro/posts/PostGridCard.astro";
import Layout from "@/layouts/Layout.astro";
import { cn } from "@/lib/cn";
import type { PaginateFunction } from "astro";
import { getCollection } from "astro:content";

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const copy = (arr: any[], times: number) => {
    const result = [];
    for (let i = 0; i < times; i++) {
      result.push(arr.slice());
    }
    return result;
  };

  const allPosts = await getCollection("posts", ({ data }) => !data.draft).then(
    (r) => copy(r, 50).flat(),
  );
  return paginate(
    allPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf()),
    { pageSize: 6 },
  );
}

const { page: pageInfo } = Astro.props;

const pages = Array.from({ length: pageInfo.lastPage }, (_, i) => i + 1);

const baseUrl = "/blog";

const getPageUrl = (page: number) => {
  if (page === 1) return baseUrl;
  return `${baseUrl}/${page}`;
};
---

<Layout title="Blog" description="Blog" mainClassname="min-h-full  ">
  <!-- <Breadcrumbs
      items={[
        {
          label: `Blog [${page.currentPage}]`,
          href: "/blog",
          icon: "lucide:scroll-text",
          active: true,
        },
      ]}
    /> -->

  <div
    class="min-h-[calc(100%-100px)] grid lg:grid-cols-3 md:grid-cols-2 mx-auto max-w-[95%] lg:max-w-[1200px] gap-6"
  >
    {pageInfo.data.map((post) => <PostGridCard post={post} />)}
  </div>

  <div class="join flex mx-auto box justify-center mt-10 box flex-wrap">
    <a
      class={cn("btn join-item", {
        ["pointer-events-none cursor-default"]: pageInfo.currentPage === 1,
      })}
      href={pageInfo.currentPage > 1
        ? getPageUrl(pageInfo.currentPage - 1)
        : undefined}
    >
      &lt;
    </a>
    {
      pages.map((page) => (
        <a
          href={getPageUrl(page)}
          class={cn("btn join-item min-w-12", {
            ["btn-primary"]: page === pageInfo.currentPage,
          })}
        >
          {page}
        </a>
      ))
    }
    <a
      class={cn("btn join-item", {
        ["pointer-events-none cursor-default"]:
          pageInfo.currentPage === pageInfo.lastPage,
      })}
      href={pageInfo.currentPage < pageInfo.lastPage
        ? getPageUrl(pageInfo.currentPage + 1)
        : undefined}
    >
      &gt;
    </a>
  </div>
</Layout>
